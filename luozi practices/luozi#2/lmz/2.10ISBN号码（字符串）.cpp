/*
题目描述

每一本正式出版的图书都有一个 ISBN 号码与之对应，ISBN 码包括 99 位数字、11 位识别码和 33 位分隔符，其规定格式如 x-xxx-xxxxx-x，其中符号 - 就是分隔符（键盘上的减号），最后一位是识别码，例如 0-670-82162-4就是一个标准的 ISBN 码。ISBN 码的首位数字表示书籍的出版语言，例如 00 代表英语；第一个分隔符 - 之后的三位数字代表出版社，例如 670670 代表维京出版社；第二个分隔符后的五位数字代表该书在该出版社的编号；最后一位为识别码。

识别码的计算方法如下：

首位数字乘以 11 加上次位数字乘以 22 ……以此类推，用所得的结果  mod 11mod11，所得的余数即为识别码，如果余数为 1010，则识别码为大写字母 XX。例如 ISBN 号码 0-670-82162-4 中的识别码 44 是这样得到的：对 067082162 这 99 个数字，从左至右，分别乘以 1,2,…,91,2,…,9 再求和，即 0×1+6×2+……+2×9=1580×1+6×2+……+2×9=158，然后取 158 mod 11158mod11 的结果 44 作为识别码。

你的任务是编写程序判断输入的 ISBN 号码中识别码是否正确，如果正确，则仅输出 Right；如果错误，则输出你认为是正确的 ISBN 号码。
输入格式

一个字符序列，表示一本书的 ISBN 号码（保证输入符合 ISBN 号码的格式要求）。
输出格式

一行，假如输入的 ISBN 号码的识别码正确，那么输出 Right，否则，按照规定的格式，输出正确的 ISBN 号码（包括分隔符 -）。
输入输出样例
输入 #1

0-670-82162-4

输出 #1

Right

输入 #2

0-670-82162-0

输出 #2

0-670-82162-4
*/
#include<iostream>
#include<string>
#include<sstream>
#include<cmath>
using namespace std;

int main()
{
	string s;
	cin >> s;
	int len_s = s.size();
	int a[10];
	int i = 0, j = 0;
	for (int i = 0; i < len_s; i++)
	{
		if (s[i] >= '0' && s[i] <= '9')
		{
			a[j] = s[i] - '0';
			j++;
		}
		else if (s[i] == 'X')
		{
			a[9] = 'X';
		}
	}

	int sum = 0;
	for (int i = 0; i < 9; i++)
	{
		sum += (i + 1) * a[i];
	}
	int S = sum % 11;

	if (S == 10)
	{
		if (a[9] == 'X')
			cout << "Right";
		else
		{
			for (int i = 0; i < 9; i++)
			{
				if (i == 1 || i == 4)
					cout << '-';
				cout << a[i];
			}
			cout << '-';
			cout << 'X';
		}
	}
	else
	{
		if (a[9] == S)
			cout << "Right";
		else
		{
			for (int i = 0; i < 9; i++)
			{
				if (i == 1 || i == 4)
					cout << '-';
				cout << a[i];
			}
			cout << '-';
			cout << S;
		}
	}
}